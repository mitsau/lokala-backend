name: Deploy Ktor Backend to VPS

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker Image with Tag
      - name: Build Docker Image
        env:
          IMAGE_NAME: ktor-app
          IMAGE_TAG: 0.0.1
        run: |
          docker build --build-arg APP_VERSION=${IMAGE_TAG} -t ${IMAGE_NAME}:${IMAGE_TAG} .
          docker save -o ${IMAGE_NAME}-${IMAGE_TAG}.tar ${IMAGE_NAME}:${IMAGE_TAG}

      # Step 4: Transfer Docker Image to VPS
      - name: Transfer Docker Image to VPS
        run: |
          mkdir -p ~/.ssh
          echo "$VPS_SSH_PRIVATE" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H -p 22 ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
          scp -i ~/.ssh/id_rsa ktor-app-0.0.1.tar ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/ktor-app-0.0.1.tar
        env:
          VPS_SSH_PRIVATE: ${{ secrets.VPS_SSH_PRIVATE }}

      # Step 5: Deploy and Run Docker Container on VPS
      - name: Deploy Docker Container on VPS
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            echo "Loading Docker image..."
            docker load -i /tmp/ktor-app-0.0.1.tar

            echo "Stopping existing container..."
            docker stop ktor-app-container || true
            docker rm ktor-app-container || true

            echo "Starting new container..."
            docker run -d --name ktor-app-container -p 8080:8080 ktor-app:0.0.1

            echo "Cleanup: Removing transferred image file"
            rm /tmp/ktor-app-0.0.1.tar
          EOF
        env:
          VPS_SSH_PRIVATE: ${{ secrets.VPS_SSH_PRIVATE }}
